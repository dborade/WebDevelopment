#pragma checksum "C:\Users\darsh\Documents\GitHub\IS8012\Assignment Vue\ClassSchedule\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f03357f1391187b391727ac5f1ccd91c2740dddc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(ClassSchedule.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(ClassSchedule.Pages.Pages_Index), null)]
namespace ClassSchedule.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\darsh\Documents\GitHub\IS8012\Assignment Vue\ClassSchedule\Pages\_ViewImports.cshtml"
using ClassSchedule;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f03357f1391187b391727ac5f1ccd91c2740dddc", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e2a80b6e7a8dec920ffe991d9aeef981af14626f", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-on:submit.stop.prevent", new global::Microsoft.AspNetCore.Html.HtmlString("addClass"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\darsh\Documents\GitHub\IS8012\Assignment Vue\ClassSchedule\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
            BeginContext(91, 1552, true);
            WriteLiteral(@"
<h1>Class Schedule</h1>

<div id=""app"">
    
    <ul>
        <li v-for=""classScheduler in classSchedulers""> 
            {{ classScheduler.classCode }} - {{ classScheduler.className }} - {{ classScheduler.professor }} - {{ classScheduler.totalEnrollment }}
               
               <div class=""row"" v-show=""classScheduler.addToClass"">
                    <div class=""col-sm-6"">
                        <input type=""text"" class=""form-control"" id=""Name"" placeholder=""Who do you want to add to this class?"" v-model=""form.Name""/>
                            <button class=""btn btn-primary"" v-on:click.stop.prevent=""addStudentToClass(classScheduler)"">Add this student</button> 
                            <button class=""btn btn-default"" v-on:click.stop.prevent=""cancelAddingToClass(classScheduler)"">Cancel</button>      
                    </div>
                </div>
                
                <span v-show=""classScheduler.isClassAdded""> 
                     <a href=""#""  v-on:click.stop.pre");
            WriteLiteral(@"vent=""removeFromClass(classScheduler)""> Remove from this class </a>       
                 </span>
                <span v-show=""!classScheduler.isClassAdded"">
                    <a href=""#""  v-on:click.stop.prevent=""startAddingStudent(classScheduler)""> Add to this class </a>              
                </span>
                <span> | </span>
                <a href=""#"" v-on:click.stop.prevent=""deleteClass(classScheduler)"">Delete This class</a>
        </li>
    </ul>
    
    <div>
        <hr />
        ");
            EndContext();
            BeginContext(1643, 1135, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d32bff47d6d4e6ead1ad08843c0a650", async() => {
                BeginContext(1699, 1072, true);
                WriteLiteral(@" 
       
        <h4>Add new Class</h4>
        <div class=""form-group"">
            <label for=""classCode"">Class Code</label>
            <input type=""text"" class=""form-control"" id=""classCode"" placeholder=""Class Code"" v-model=""form.classCode""/>
        </div> 

        <div class=""form-group"">
            <label for=""className"">Class Name</label>
            <input type=""text"" class=""form-control"" id=""className"" placeholder=""Class Name"" v-model=""form.className"" />
        </div> 

        <div class=""form-group"">
            <label for=""professor"">Professor Name</label>
            <input type=""text"" class=""form-control"" id=""professor"" placeholder=""Professor Name"" v-model=""form.professor"" />
        </div> 


        <div class=""form-group"">
            <label for=""totalEnrollment"">Total Enrollment</label>
            <input type=""text"" class=""form-control"" id=""totalEnrollment"" placeholder=""Total Enrollment"" v-model=""form.totalEnrollment""/>
        </div>

        <button type=""submi");
                WriteLiteral("t\" class=\"btn btn-primary\">Submit</button>\r\n    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2778, 28, true);
            WriteLiteral("\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(2824, 5915, true);
                WriteLiteral(@"
    <script>
        var app = new Vue({
            el: ""#app"",
            data: {
                // PLACE DATA PROPERTIES HERE - THIS IS THE ""MODEL"" FOR OUR PROGRAM
                classSchedulers: [],
                form: {
                    classCode: """",
                    className: """",
                    professor:"""",
                    totalEnrollment:"""",
                    Name:""""
                    
                },
                addToClass : false,
                //addedToClass:false

            },
            mounted: function() {
                // PERFORM ANY ACTIONS WHEN THE PAGE LOADS HERE - SIMILAR TO JQUERY DOCUMENT.READY
                this.loadData();
            },
            methods: {
                // ADD ANY METHODS (CLICK, SUBMIT EVENTS, ETC.)
                loadData: function () {
                    var self = this;
                    $.ajax({
                        url: 'http://localhost:5000/api/ClassSchedulers',
               ");
                WriteLiteral(@"         dataType: 'json',
                        contentType: 'application/json',
                        method: 'GET'
                    }).done(function(classData,status,xhr) {
                        // process the response when status code is 200-299
                        $.each(classData,
                            function(idx, item) {
                                item.addToClass = false;
                                console.log(item.addToClass);
                            });
                        self.classSchedulers = classData;
                        
                    }).fail(function(xhr,status,error) {
                        // deal with error from server (status code 400-599)
                        alert(""There was an error retrieving the data"");
                    });
                },
                
                
                deleteClass: function (classScheduler) {
                    var self = this;
                    $.ajax({
          ");
                WriteLiteral(@"              url: 'http://localhost:5000/api/ClassSchedulers/' + classScheduler.id,
                        dataType: 'json',
                        contentType: 'application/json',
                        method: 'DELETE'
                    }).done(function (responseData, status, xhr) {
                        self.loadData();                
                    }).fail(function(xhr, status, error) {
                        alert(""There was an error deleting the class"");
                    });
                },
                addClass: function () {
                    var self = this;
                    $.ajax({
                        url: 'http://localhost:5000/api/ClassSchedulers',
                        dataType: 'json',
                        contentType: 'application/json',
                        method: 'POST',
                        data: JSON.stringify(self.form)
                    }).done(function(responseData, status, xhr) {
                        self.loadData(); ");
                WriteLiteral(@"// RELOAD THE scheduler data
                        self.form.classCode = """"; 
                        self.form.className = """";
                        self.form.professor = """";
                        self.form.totalEnrollment = """"; 
                    }).fail(function(xhr, status, error) {
                        alert(""There was an error saving the class schedule"");
                    });
                },

                startAddingStudent: function (classScheduler) {
                    console.log(""Start adding student"", classScheduler);
                    classScheduler.addToClass = true;
                },

                cancelAddingToClass: function (classScheduler) {
                    console.log(""Cancel adding to the class"", classScheduler);
                    classScheduler.addToClass = false;
                },

                addStudentToClass: function (classScheduler) {
                    //classScheduler.addedToClass = true;
                    var self = t");
                WriteLiteral(@"his;      
                                 
                     $.ajax({
                        url: 'http://localhost:5000/api/ClassSchedulers/addClassToSchedule/' + classScheduler.id,
                        dataType: 'json',
                        contentType: 'application/json',
                        method: 'PUT',
                        data: JSON.stringify(self.form)
                    }).done(function (responseData, status, xhr) {
                        self.loadData();                           
                        self.form.Name="""";                         
                    }).fail(function(xhr, status, error) {
                        alert(""There was an error saving student to your class"");
                    });                  
                },


                 removeFromClass: function (classScheduler) {
                    classScheduler.addToClass = false;
                    classScheduler.addToClass = false; 
                    var self = this;
   ");
                WriteLiteral(@"                  $.ajax({
                        url: 'http://localhost:5000/api/ClassSchedulers/removeFromSchedule/' + classScheduler.id,
                        dataType: 'json',
                        contentType: 'application/json',
                        method: 'DELETE'
                    }).done(function (responseData, status, xhr) {
                        self.loadData();               
                    }).fail(function(xhr, status, error) {
                        alert(""There was an error saving student to your class"");
                    });
                 },
            },

                
            computed: {
                // CREATE ANY CALCULATED PROPERTIES HERE. THEY BEHAVE LIKE READ-ONLY DATA
            }
        });
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ClassSchedule.Pages.IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ClassSchedule.Pages.IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ClassSchedule.Pages.IndexModel>)PageContext?.ViewData;
        public ClassSchedule.Pages.IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
