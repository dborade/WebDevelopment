// <auto-generated />
using System;
using HelloWorld.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HelloWorld.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("HelloWorld.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Certifications");

                    b.Property<string>("CollegeName");

                    b.Property<string>("DegreeName");

                    b.Property<double?>("GPA");

                    b.Property<int>("PersonId");

                    b.Property<string>("RelevantCoursework");

                    b.Property<string>("UniversityName");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("HelloWorld.Models.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("CompanyName");

                    b.Property<string>("Country");

                    b.Property<string>("Designation");

                    b.Property<string>("ExperienceDetails");

                    b.Property<int>("PersonId");

                    b.Property<string>("Project");

                    b.Property<string>("Tenure");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("HelloWorld.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DOB");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("HelloWorld.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Info");

                    b.Property<string>("Name");

                    b.Property<int>("PersonId");

                    b.Property<string>("Skills");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("HelloWorld.Models.Skillset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Addskills");

                    b.Property<string>("Language");

                    b.Property<int>("PersonId");

                    b.Property<int?>("Rating");

                    b.Property<string>("Tools");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Skillsets");
                });

            modelBuilder.Entity("HelloWorld.Models.Education", b =>
                {
                    b.HasOne("HelloWorld.Models.Person", "Profile")
                        .WithMany("Educations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloWorld.Models.Experience", b =>
                {
                    b.HasOne("HelloWorld.Models.Person", "Profile")
                        .WithMany("Experiences")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloWorld.Models.Project", b =>
                {
                    b.HasOne("HelloWorld.Models.Person", "Profile")
                        .WithMany("Projects")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloWorld.Models.Skillset", b =>
                {
                    b.HasOne("HelloWorld.Models.Person", "Profile")
                        .WithMany("Skillsets")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
