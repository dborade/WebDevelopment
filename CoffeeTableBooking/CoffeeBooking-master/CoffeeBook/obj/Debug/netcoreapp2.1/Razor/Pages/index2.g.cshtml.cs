#pragma checksum "C:\Users\darsh\Documents\GitHub\DarshanaDotNet\CoffeeBooking\CoffeeBook\Pages\index2.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3b325c8cacd1ce218330fb48cb071910e59b6e1c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(CoffeeBooking.Pages.Pages_index2), @"mvc.1.0.view", @"/Pages/index2.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Pages/index2.cshtml", typeof(CoffeeBooking.Pages.Pages_index2))]
namespace CoffeeBooking.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\darsh\Documents\GitHub\DarshanaDotNet\CoffeeBooking\CoffeeBook\Pages\_ViewImports.cshtml"
using CoffeeBooking;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3b325c8cacd1ce218330fb48cb071910e59b6e1c", @"/Pages/index2.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"07f50a5e18a50ca5b5dec9f7946a41677d1f9df2", @"/Pages/_ViewImports.cshtml")]
    public class Pages_index2 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 25, true);
            WriteLiteral("<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(25, 614, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47ba98f8c705478094c0e91b0ab8f2e7", async() => {
                BeginContext(31, 601, true);
                WriteLiteral(@"
    <meta name=""viewport"" content=""initial-scale=1.0, width=device-width"" />
    <link rel=""stylesheet"" type=""text/css"" href=""https://js.api.here.com/v3/3.0/mapsjs-ui.css?dp-version=1533195059"" />
    <script type=""text/javascript"" src=""https://js.api.here.com/v3/3.0/mapsjs-core.js""></script>
    <script type=""text/javascript"" src=""https://js.api.here.com/v3/3.0/mapsjs-service.js""></script>
    <script type=""text/javascript"" src=""https://js.api.here.com/v3/3.0/mapsjs-ui.js""></script>
    <script type=""text/javascript"" src=""https://js.api.here.com/v3/3.0/mapsjs-mapevents.js""></script>

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(639, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(641, 4271, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b5a7381c9d66474c877856d1efc7b9d6", async() => {
                BeginContext(648, 4257, true);
                WriteLiteral(@"
    <div id=""map"" style=""width: 100%; height: 400px; background: grey"" />
      <script type=""text/javascript"" charset=""UTF-8"">

          window.onload = function () {
              getLocation();
          };
          
          //Center to user's current location
        function moveMapToCurrentLocation(map,Xlat,Xlong) {
            map.setCenter({ lat: Xlat, lng: Xlong });
            map.setZoom(14);
          }

          //Add marker to the location
          function addMarkersToMap(map, Xlat, Xlong) {
              //var lati = 40.153727;
              //var longi = -85.4317457;
              var parisMarker = new H.map.Marker({ lat: Xlat, lng: Xlong });
              map.addObject(parisMarker);
          }
          /*
          //Add infobubble
          function addInfoBubble(map, group, geocoordinate, geohtml) {
              var group = new H.map.Group();
              map.addObject(group);
           // add 'tap' event listener, that opens info bubble, to the group");
                WriteLiteral(@"
              group.addEventListener('tap', function (evt) {
                  // event target is the marker itself, group is a parent event target
                  // for all objects that it contains
                  var bubble = new H.ui.InfoBubble(evt.target.getPosition(), {
                      // read custom data
                      content: evt.target.getData()
                  });
                  // show info bubble
                  ui.addBubble(bubble);
              }, false);

        */


        /**
         * Boilerplate map initialization code starts below:
         */

        //Step 1: initialize communication with the platform
        var platform = new H.service.Platform({
            app_id: 'devportal-demo-20180625',
            app_code: '9v2BkviRwi9Ot26kp2IysQ',
            useHTTPS: true
        });
        var pixelRatio = window.devicePixelRatio || 1;
        var defaultLayers = platform.createDefaultLayers({
            tileSize: pixelRatio === 1 ?");
                WriteLiteral(@" 256 : 512,
            ppi: pixelRatio === 1 ? undefined : 320
        });

        //Step 2: initialize a map  - not specificing a location will give a whole world view.
        var map = new H.Map(document.getElementById('map'),
            defaultLayers.normal.map, { pixelRatio: pixelRatio });

        //Step 3: make the map interactive
        // MapEvents enables the event system
        // Behavior implements default interactions for pan/zoom (also on mobile touch environments)
        var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

        // Create the default UI components
        var ui = H.ui.UI.createDefault(map, defaultLayers);

        //var x = document.getElementById(""demo"");
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                alert(""Geolocation is not supported by this browser."");
            }
        }

       ");
                WriteLiteral(@"   function showPosition(position) {
              //alert(""Currently you are here"")
              // Now use the map as required...
              var xlat = position.coords.latitude;
              var xlong = position.coords.longitude;
              moveMapToCurrentLocation(map, xlat, xlong);
              var circle = new H.map.Circle({ lat: xlat, lng: xlong }, 1000);
              map.addObject(circle);
              //addMarkersToMap(map, xlat, xlong);
              //addInfoBubble(map, xlat, xlong);
              //var icon = new H.map.Icon('https://static.thenounproject.com/png/12314-200.png', { size: { w: 32, h: 32 } });
              var icon = new H.map.Icon('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxptK5F9I0F4dK7aqV54GqeRAIL6crHDEVqRLtZFP1MVFhJah0rA', { size: { w: 32, h: 32 } });
              
              // Create a marker using the previously instantiated icon:
              var marker = new H.map.Marker({ lat: xlat, lng: xlong }, { icon: icon });
              // A");
                WriteLiteral("dd the marker to the map:\r\n              map.addObject(marker);\r\n              \r\n              \r\n          }\r\n\r\n\r\n          \r\n        \r\n        \r\n    </script>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4912, 9, true);
            WriteLiteral("\r\n</html>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
