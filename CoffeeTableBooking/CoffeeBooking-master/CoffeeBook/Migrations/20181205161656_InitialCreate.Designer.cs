// <auto-generated />
using System;
using CoffeeBooking.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeBooking.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20181205161656_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("CoffeeBooking.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContactNo");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int>("TableId");

                    b.HasKey("Id");

                    b.HasIndex("TableId")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CoffeeBooking.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("ClosingTime");

                    b.Property<string>("Country");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("OpeningTime");

                    b.Property<string>("PriceRange");

                    b.HasKey("Id");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("CoffeeBooking.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AssignRestaurentId");

                    b.Property<DateTime?>("DateofBooking");

                    b.Property<int>("TableNumber");

                    b.Property<string>("TableType");

                    b.Property<string>("TimeofBooking");

                    b.Property<string>("assignedto");

                    b.HasKey("Id");

                    b.HasIndex("AssignRestaurentId");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("CoffeeBooking.Models.Customer", b =>
                {
                    b.HasOne("CoffeeBooking.Models.Table", "Table")
                        .WithOne("Customer")
                        .HasForeignKey("CoffeeBooking.Models.Customer", "TableId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CoffeeBooking.Models.Table", b =>
                {
                    b.HasOne("CoffeeBooking.Models.Restaurant", "AssignRestaurent")
                        .WithMany("Tables")
                        .HasForeignKey("AssignRestaurentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
